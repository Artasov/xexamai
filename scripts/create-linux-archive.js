#!/usr/bin/env node

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

// –ß–∏—Ç–∞–µ–º –≤–µ—Ä—Å–∏—é –∏–∑ package.json
const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));
const version = packageJson.version;

console.log(`üì¶ Creating Linux archive for version ${version}...`);

const distPath = path.join(process.cwd(), 'dist');
const linuxUnpackedPath = path.join(distPath, 'linux-unpacked');
const archiveName = `xexamai-${version}-linux-x64.tar.gz`;
const archivePath = path.join(distPath, archiveName);

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–∞–ø–∫–∞ linux-unpacked
if (!fs.existsSync(linuxUnpackedPath)) {
  console.error('‚ùå linux-unpacked directory not found!');
  console.error('   Make sure you ran "npm run build:linux" first');
  process.exit(1);
}

try {
  // –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤
  console.log(`üî® Creating archive: ${archiveName}`);
  execSync(`tar -czf "${archivePath}" linux-unpacked`, { 
    cwd: distPath,
    stdio: 'inherit' 
  });
  
  // –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä –∞—Ä—Ö–∏–≤–∞
  const stats = fs.statSync(archivePath);
  const sizeMB = (stats.size / 1024 / 1024).toFixed(2);
  
  console.log(`‚úÖ Archive created successfully!`);
  console.log(`üìÅ Location: dist/${archiveName}`);
  console.log(`üìä Size: ${sizeMB} MB`);
  console.log('');
  console.log('üöÄ Ready for distribution!');
  console.log('   Users can extract and run: tar -xzf xexamai-0.1.0-linux-x64.tar.gz && ./linux-unpacked/xexamai');
  
} catch (error) {
  console.error('‚ùå Failed to create archive:', error.message);
  process.exit(1);
}
